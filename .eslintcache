[{"C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\index.js":"1","C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\App.js":"2","C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\reportWebVitals.js":"3","C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\components\\Header.jsx":"4","C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\Productos.js":"5"},{"size":608,"mtime":1610255047141,"results":"6","hashOfConfig":"7"},{"size":4620,"mtime":1610393229571,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":3669,"mtime":1610270119770,"results":"10","hashOfConfig":"7"},{"size":4346,"mtime":1610269260186,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"9kj3v1",{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\index.js",["25"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from \"./components/Header\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["26","27"],"C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\App.js",["28","29","30","31"],"C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\reportWebVitals.js",[],"C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\components\\Header.jsx",["32","33","34"],"import * as React from \"react\"\r\nimport { AppBar, Toolbar, IconButton, List, ListItem, ListItemText, Container } from \"@material-ui/core\"\r\nimport { Height, Home } from \"@material-ui/icons\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport logo from '../clicksuscribe.png';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faClipboardCheck, faCoffee, faIdBadge, faShoppingBag, faShoppingCart, faTicketAlt, faUserAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst element = <FontAwesomeIcon icon={faCoffee} />\r\n\r\nconst useStyles = makeStyles({\r\n    navbarDisplayFlex: {\r\n        display: `flex`,\r\n        justifyContent: `space-between`,\r\n      },\r\n    navDisplayFlex: {\r\n      display: `flex`,\r\n      justifyContent: `space-between`\r\n    },\r\n    b1: {\r\n        textDecoration: `none`,\r\n        color: `white`,\r\n        backgroundColor: `#3f51b5`\r\n    },\r\n    b2: {\r\n        textDecoration: `none`,\r\n        color: `white`,\r\n        backgroundColor: `#DB9635`\r\n    },\r\n    b3: {\r\n        textDecoration: `none`,\r\n        color: `white`,\r\n        backgroundColor: `#68953B`\r\n    },\r\n    b4: {\r\n        textDecoration: `none`,\r\n        color: `white`,\r\n        backgroundColor: `#C00F2C`,\r\n        Height: `100%`\r\n    },\r\n    b5: {\r\n        textDecoration: `none`,\r\n        color: `white`,\r\n        backgroundColor: `#4B7BAB`\r\n    },\r\n    searchbutton: {\r\n        width: `8%`,\r\n        alignSelf: `right`,\r\n        backgroundColor: \"#3f51b5\",\r\n        color: `white`\r\n    }\r\n\r\n  });\r\n\r\nconst navLinks = [\r\n    { title: `Ver todos los productos`, path: `/productos`, classN: `b1`, iconN: faShoppingBag},\r\n    { title: `Cliente`, path: `/cliente`, classN: `b2`, iconN: faIdBadge },\r\n    { title: `siclick`, path: `/siclick`, classN: `b3`, iconN: faClipboardCheck },\r\n    { title: `Soporte`, path: `/soporte`, classN: `b4`, iconN: faTicketAlt },\r\n    { title: `0`, path: `/carrito`, classN: `b5`, iconN: faShoppingCart },\r\n    { title: `v`, path: `/perfil`, classN: `b4` ,iconN: faUserAlt}\r\n  ]\r\n\r\n  const Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        \r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Container maxWidth=\"xl\" className={classes.navbarDisplayFlex} style={{height: \"70px\"}}>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"home\">\r\n                            <img src={logo} className=\"App-logo\" alt=\"logo\" style={{display: \"absolute\", height:\"120px\", marginTop:\"50px\", width:\"330px\"}}/>\r\n                        </IconButton>\r\n                        <List component=\"nav\" aria-labelledby=\"main navigation\" className={classes.navDisplayFlex}>\r\n                            {navLinks.map(({ title, path, classN, iconN }) => (\r\n                            <a href={path} key={title} className={classes[classN]} icon={iconN}>\r\n                                \r\n                                <ListItem button>\r\n                                    <FontAwesomeIcon icon={iconN} />\r\n                                <ListItemText primary={title} style={{marginLeft:\"5px\"}}/>\r\n                                </ListItem>\r\n                            </a>\r\n                            ))}\r\n                        </List>\r\n                    </Container>\r\n                </Toolbar>\r\n                <Container style={{display: \"flex\", marginLeft: \"600px\", paddingBottom: \"10px\", height: \"50px\"}}>\r\n                    <input style={{width: \"90%\"}}></input>\r\n                    <button className={classes.searchbutton}>Buscar</button>\r\n                </Container>\r\n            </AppBar>\r\n    )\r\n  }\r\n  export default Header","C:\\Users\\Maiden\\Documents\\dev\\click-subscribe\\src\\Productos.js",[],{"ruleId":"35","severity":1,"message":"36","line":8,"column":7,"nodeType":"37","messageId":"38","endLine":8,"endColumn":18},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":39,"column":54,"nodeType":"45","messageId":"46","endLine":39,"endColumn":56},{"ruleId":"47","severity":1,"message":"48","line":40,"column":45,"nodeType":"49","messageId":"50","endLine":40,"endColumn":47},{"ruleId":"51","severity":1,"message":"52","line":51,"column":35,"nodeType":"53","endLine":51,"endColumn":153},{"ruleId":"54","severity":1,"message":"55","line":64,"column":76,"nodeType":"53","endLine":64,"endColumn":102},{"ruleId":"35","severity":1,"message":"56","line":3,"column":10,"nodeType":"37","messageId":"38","endLine":3,"endColumn":16},{"ruleId":"35","severity":1,"message":"57","line":3,"column":18,"nodeType":"37","messageId":"38","endLine":3,"endColumn":22},{"ruleId":"35","severity":1,"message":"58","line":9,"column":7,"nodeType":"37","messageId":"38","endLine":9,"endColumn":14},"no-unused-vars","'rootElement' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Height' is defined but never used.","'Home' is defined but never used.","'element' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]